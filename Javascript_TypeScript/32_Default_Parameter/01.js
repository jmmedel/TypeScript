/*

Default Parameters
Function parameters can also be assigned values by default. However, such parameters can also be explicitly passed values.

Syntax
function function_name(param1[:type],param2[:type] = default_value) {
}
Note − A parameter cannot be declared optional and default at the same time.

Example: Default parameters

*/
function calculate_discount(price, rate) {
    if (rate === void 0) { rate = 0.50; }
    var discount = price * rate;
    console.log("Discount Amount: ", discount);
}
calculate_discount(1000);
calculate_discount(1000, 0.30);
/*

On compiling, it will generate following JavaScript code −

//Generated by typescript 1.8.10
function calculate_discount(price, rate) {
  if (rate === void 0) { rate = 0.50; }
  var discount = price * rate;
  console.log("Discount Amount: ", discount);
}
calculate_discount(1000);
calculate_discount(1000, 0.30);
Its output is as follows −

Discount amount : 500
Discount amount : 300
The example declares the function, calculate_discount. The function has two parameters - price and rate.

The value of the parameter rate is set to 0.50 by default.

The program invokes the function, passing to it only the value of the parameter price. Here, the value of rate is 0.50 (default)

The same function is invoked, but with two arguments. The default value of rate is overwritten and is set to the value explicitly passed.

*/ 
